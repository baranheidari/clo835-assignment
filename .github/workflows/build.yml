name: build-and-push
on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      APP_REPO: clo835-app
      MYSQL_REPO: clo835-mysql
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: |
          aws ecr describe-repositories --repository-names $APP_REPO || aws ecr create-repository --repository-name $APP_REPO
          aws ecr describe-repositories --repository-names $MYSQL_REPO || aws ecr create-repository --repository-name $MYSQL_REPO
      - run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - run: |
          docker build -t $APP_REPO:latest ./app
          docker tag $APP_REPO:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$APP_REPO:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$APP_REPO:latest
      - run: |
          docker build -t $MYSQL_REPO:latest ./mysql
          docker tag $MYSQL_REPO:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$MYSQL_REPO:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$MYSQL_REPO:latest
